/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Home;

import ClientSide.Client;
import Login.Login;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hila
 */
public class UserHome extends javax.swing.JFrame {

    private static String username;
    private DefaultTableModel bookModel;
    private DefaultTableModel downloadedBooksModel;
    private int rowIndex;
    private int columnIndex;
    private int downloadedRowIndex;
    private int downloadedColumnIndex;
    private Client client;

    public UserHome(String user, Client clientConnection) {
        initComponents();
        username = user;
        client = clientConnection;
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        LogoutButton = new javax.swing.JButton();
        usernameLabel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        bookSearchField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bookSearchButton = new javax.swing.JButton();
        bookRefreshButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        booksTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        downloadedBooksTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        newUsernameField = new javax.swing.JTextField();
        changeUsernameButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        changePasswordButton = new javax.swing.JButton();
        oldPasswordField = new javax.swing.JPasswordField();
        newPasswordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 204));

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel1.setText("LIBRARY");

        LogoutButton.setBackground(new java.awt.Color(153, 255, 204));
        LogoutButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LogoutButton.setText("Logout");
        LogoutButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });

        usernameLabel.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(308, 308, 308)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jPanel6.setBackground(new java.awt.Color(102, 255, 255));

        jPanel7.setBackground(new java.awt.Color(153, 255, 204));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 204), 4, true));

        bookSearchField.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setText("Search:");

        bookSearchButton.setBackground(new java.awt.Color(102, 255, 255));
        bookSearchButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        bookSearchButton.setText("Search");
        bookSearchButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bookSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookSearchButtonActionPerformed(evt);
            }
        });

        bookRefreshButton.setBackground(new java.awt.Color(102, 255, 255));
        bookRefreshButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        bookRefreshButton.setText("Refresh");
        bookRefreshButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bookRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(bookSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(bookRefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(237, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookSearchField)
                    .addComponent(bookSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookRefreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(153, 255, 204));
        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 204), 4, true));

        booksTable.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        booksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Author", "Genres", "Cover", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        booksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                booksTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(booksTable);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Available Books", jPanel3);

        jPanel9.setBackground(new java.awt.Color(102, 255, 255));

        jPanel10.setBackground(new java.awt.Color(153, 255, 204));
        jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 204), 4, true));

        downloadedBooksTable.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        downloadedBooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Author", "Genres", "Cover ", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        downloadedBooksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                downloadedBooksTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(downloadedBooksTable);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1153, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Downloaded Books", jPanel4);

        jPanel11.setBackground(new java.awt.Color(102, 255, 255));

        jPanel12.setBackground(new java.awt.Color(153, 255, 204));
        jPanel12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 204), 4, true));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setText("Update User Information");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel4.setText("New Username");

        newUsernameField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        changeUsernameButton.setBackground(new java.awt.Color(102, 255, 255));
        changeUsernameButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        changeUsernameButton.setText("Change Username");
        changeUsernameButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        changeUsernameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeUsernameButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel5.setText("Old Password");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel6.setText("New Password");

        changePasswordButton.setBackground(new java.awt.Color(102, 255, 255));
        changePasswordButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        changePasswordButton.setText("Change Password");
        changePasswordButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        changePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(209, 209, 209)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(changeUsernameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(changePasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(85, 85, 85))))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(oldPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                                .addComponent(newUsernameField, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)))))
                .addContainerGap(417, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(newUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(changeUsernameButton, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(oldPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4)
                        .addGap(83, 83, 83)
                        .addComponent(jLabel5)))
                .addGap(29, 29, 29)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(changePasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(258, 258, 258))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("User Information", jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void init() {
        tableViewBooks();
        tableViewDownloadedBooks();
        usernameLabel.setText(username);
        setLocationRelativeTo(null);
    }

    private void tableViewBooks() {
        ArrayList<Object[]> table = client.getBooks("");
        DefaultTableModel model = (DefaultTableModel) booksTable.getModel();
        for (Object[] arr : table) {
            for (Object element : arr) {
                if (element instanceof String[] strings) {
                    arr[2] = Arrays.toString(strings);
                }
            }
            model.addRow(arr);
        }
        bookModel = (DefaultTableModel) booksTable.getModel();
        booksTable.setRowHeight(200);
        booksTable.setShowGrid(true);
        booksTable.setGridColor(Color.BLACK);
        booksTable.setBackground(Color.white);
        booksTable.setCellSelectionEnabled(true);
        booksTable.getTableHeader().setFont(new Font("Times New Roman", Font.PLAIN, 30));
        booksTable.getColumnModel().getColumn(3).setCellRenderer(new LabelRendar());
    }

    private void tableViewDownloadedBooks() {
        ArrayList<Object[]> table = client.getDownloadedBooks();
        DefaultTableModel model = (DefaultTableModel) downloadedBooksTable.getModel();
        for (Object[] arr : table) {
            for (Object element : arr) {
                if (element instanceof String[] strings) {
                    arr[2] = Arrays.toString(strings);
                }
            }
            model.addRow(arr);
        }
        downloadedBooksModel = (DefaultTableModel) downloadedBooksTable.getModel();
        downloadedBooksTable.setRowHeight(200);
        downloadedBooksTable.setShowGrid(true);
        downloadedBooksTable.setGridColor(Color.BLACK);
        downloadedBooksTable.setBackground(Color.white);
        downloadedBooksTable.setCellSelectionEnabled(true);
        downloadedBooksTable.getTableHeader().setFont(new Font("Times New Roman", Font.PLAIN, 30));
        downloadedBooksTable.getColumnModel().getColumn(3).setCellRenderer(new LabelRendar());
    }

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        int a = JOptionPane.showConfirmDialog(this, "Do you want to logout now?", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            Login log = new Login();
            log.setVisible(true);
            log.pack();
            this.dispose();
            client.close();
        }
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void booksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_booksTableMouseClicked
        bookModel = (DefaultTableModel) booksTable.getModel();
        columnIndex = booksTable.getSelectedColumn();
        if (columnIndex == 4)
        {//previewbook
          int preview = JOptionPane.showConfirmDialog(this, "Do you want to preview this book", "Preview Book", JOptionPane.YES_NO_OPTION);
            if (preview == JOptionPane.YES_OPTION) {
                rowIndex = booksTable.getSelectedRow();
                String bookTitle = bookModel.getValueAt(rowIndex, 0).toString();
                client.previewBook(bookTitle);
            }
        }
        else if (columnIndex == 5) {
            int download = JOptionPane.showConfirmDialog(this, "Do you want to download this book", "Download Book", JOptionPane.YES_NO_OPTION);
            if (download == JOptionPane.YES_OPTION) {
                rowIndex = booksTable.getSelectedRow();
                String bookTitle = bookModel.getValueAt(rowIndex, 0).toString();
                String bookPath = client.downloadBook(bookTitle);
                if (bookPath != null) {
                    downloadedBooksTable.setModel(new DefaultTableModel(null, new Object[]{"Title", "Author", "Genres", "Cover", " "}));
                    downloadedBooksTable.getColumnModel().getColumn(3).setCellRenderer(new LabelRendar());
                    ArrayList<Object[]> table = client.getDownloadedBooks();
                    DefaultTableModel model = (DefaultTableModel) downloadedBooksTable.getModel();
                    for (Object[] arr : table) {
                        for (Object element : arr) {
                            if (element instanceof String[] strings) {
                                arr[2] = Arrays.toString(strings);
                            }
                        }
                        model.addRow(arr);
                    }
                    int openFile = JOptionPane.showConfirmDialog(this, "Book downloaded to: " + bookPath + "\n Do you want to open the file?", "Book Downloaded", JOptionPane.YES_NO_OPTION);
                    if (openFile == JOptionPane.YES_OPTION) {
                        File epubFile = new File(bookPath);

                        // Path to the calibre ebook-viewer executable
                        String ebookViewerPath = "C:/Program Files/Calibre2/ebook-viewer.exe";

                        // Check if the epub file exists
                        if (epubFile.exists()) {
                            try {
                                // Build the command to run ebook-viewe with the epub file
                                String[] command = {ebookViewerPath, epubFile.getAbsolutePath()};

                                // Use Runtime to execute the command
                                Process process = Runtime.getRuntime().exec(command);
                                // Optionally, wait for the process to complete (if you want to track it)
                                process.waitFor();
                            } catch (IOException | InterruptedException e) {
                                JOptionPane.showMessageDialog(this, "Error: Unable to open epub file in ebook-viewer.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "File not found!");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Couldn't download the book");
                }
            } else {
            }
        }
        booksTable.clearSelection();
    }//GEN-LAST:event_booksTableMouseClicked

    private void bookSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookSearchButtonActionPerformed
        if (bookSearchField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a search parameter");
        } else {
            booksTable.setModel(new DefaultTableModel(null, new Object[]{"Title", "Author", "Genres", "Cover", " "}));
            booksTable.getColumnModel().getColumn(3).setCellRenderer(new LabelRendar());
            ArrayList<Object[]> table = client.getBooks(bookSearchField.getText());
            DefaultTableModel model = (DefaultTableModel) booksTable.getModel();
            for (Object[] arr : table) {
                for (Object element : arr) {
                    if (element instanceof String[] strings) {
                        arr[2] = Arrays.toString(strings);
                    }
                }
                model.addRow(arr);
            }

        }
    }//GEN-LAST:event_bookSearchButtonActionPerformed

    private void bookRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookRefreshButtonActionPerformed
        booksTable.setModel(new DefaultTableModel(null, new Object[]{"Title", "Author", "Genres", "Cover", " "}));
        booksTable.getColumnModel().getColumn(3).setCellRenderer(new LabelRendar());
        ArrayList<Object[]> table = client.getBooks("");
        DefaultTableModel model = (DefaultTableModel) booksTable.getModel();
        for (Object[] arr : table) {
            for (Object element : arr) {
                if (element instanceof String[] strings) {
                    arr[2] = Arrays.toString(strings);
                }
            }
            model.addRow(arr);
        }
    }//GEN-LAST:event_bookRefreshButtonActionPerformed

    private void downloadedBooksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadedBooksTableMouseClicked
        downloadedBooksModel = (DefaultTableModel) downloadedBooksTable.getModel();
        downloadedColumnIndex = downloadedBooksTable.getSelectedColumn();
        if (downloadedColumnIndex == 4) {
            int download = JOptionPane.showConfirmDialog(this, "Do you want to download this book again", "Download Book", JOptionPane.YES_NO_OPTION);
            if (download == JOptionPane.YES_OPTION) {
                downloadedRowIndex = downloadedBooksTable.getSelectedRow();
                String bookTitle = downloadedBooksModel.getValueAt(downloadedRowIndex, 0).toString();
                String bookPath = client.downloadBook(bookTitle);
                if (bookPath != null) {
                    int openFile = JOptionPane.showConfirmDialog(this, "Book downloaded to: " + bookPath + "\n Do you want to open the file?", "Book Downloaded", JOptionPane.YES_NO_OPTION);
                    if (openFile == JOptionPane.YES_OPTION) {
                        File epubFile = new File(bookPath);

                        // Path to the calibre ebook-viewer executable
                        String ebookViewerPath = "C:/Program Files/Calibre2/ebook-viewer.exe";

                        // Check if the epub file exists
                        if (epubFile.exists()) {
                            try {
                                // Build the command to run ebook-viewer with the epub file
                                String[] command = {ebookViewerPath, epubFile.getAbsolutePath()};

                                // Use Runtime to execute the command
                                Process process = Runtime.getRuntime().exec(command);

                                // Optionally, wait for the process to complete (if you want to track it)
                                process.waitFor();
                            } catch (IOException | InterruptedException e) {
                                JOptionPane.showMessageDialog(this, "Error: Unable to open epub file in ebook-viewer.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "File not found!");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Couldn't download the book");
                }
            } else {
            }
        }
        downloadedBooksTable.clearSelection();
    }//GEN-LAST:event_downloadedBooksTableMouseClicked

    private void changeUsernameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeUsernameButtonActionPerformed
        if (!newUsernameField.getText().isEmpty()) {
            boolean changed = client.updateUsername(newUsernameField.getText());
            if (changed) {
                usernameLabel.setText(newUsernameField.getText());
                username = newUsernameField.getText();
                newUsernameField.setText(null);
            }

        } else
            JOptionPane.showMessageDialog(this, "Enter a new username");
    }//GEN-LAST:event_changeUsernameButtonActionPerformed

    private void changePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordButtonActionPerformed
        if (!String.valueOf(oldPasswordField.getPassword()).isEmpty()) {
            if (!String.valueOf(newPasswordField.getPassword()).isEmpty()) {
                client.updatePassword(String.valueOf(oldPasswordField.getPassword()), String.valueOf(newPasswordField.getPassword()));
                oldPasswordField.setText(null);
                newPasswordField.setText(null);
            } else {
                JOptionPane.showMessageDialog(this, "Enter a new password");
            }
        } else
            JOptionPane.showMessageDialog(this, "Enter your old password");
    }//GEN-LAST:event_changePasswordButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new UserHome("ADMIN", new Client("ADMIN")).setVisible(true);// the admin is the default user. if the proggram is run in this file
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogoutButton;
    private javax.swing.JButton bookRefreshButton;
    private javax.swing.JButton bookSearchButton;
    private javax.swing.JTextField bookSearchField;
    private javax.swing.JTable booksTable;
    private javax.swing.JButton changePasswordButton;
    private javax.swing.JButton changeUsernameButton;
    private javax.swing.JTable downloadedBooksTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JTextField newUsernameField;
    private javax.swing.JPasswordField oldPasswordField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}


